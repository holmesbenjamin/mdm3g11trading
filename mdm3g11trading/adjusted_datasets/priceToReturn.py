import os
import pandas as pd
import numpy as np

def compute_percentage_returns(df):
    """
    Computes the percentage returns for each commodity.
    Percentage return = (current_price / previous_price) - 1
    """
    pct_returns = df.pct_change()
    return pct_returns

def compute_log_returns(df):
    """
    Computes the log returns for each commodity.
    Log return = log(current_price) - log(previous_price)
    """
    log_returns = np.log(df / df.shift(1))
    return log_returns

def compute_differencing(df):
    """
    Computes the first difference of prices for each commodity.
    Difference = current_price - previous_price
    """
    differences = df.diff()
    return differences

def main():
    # Define file paths
    csv_file = 'commodity_futures.csv'
    output_dir = 'commodity_futures_adjusted'
    
    # Try to load CSV file
    try:
        df = pd.read_csv(csv_file, parse_dates=['Date'], index_col='Date')
        print("CSV file loaded successfully. Data shape:", df.shape)
    except Exception as e:
        print("Error loading CSV file:", e)
        return
    
    # Ensure the data is sorted by date
    df.sort_index(inplace=True)
    
    # Compute the three transformations
    pct_returns = compute_percentage_returns(df)
    log_returns = compute_log_returns(df)
    differences = compute_differencing(df)
    
    # Drop initial NaN rows generated by the shift operations
    pct_returns.dropna(inplace=True)
    log_returns.dropna(inplace=True)
    differences.dropna(inplace=True)
    
    # Create output directory if it doesn't exist
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
        print("Created output directory:", output_dir)
    
    # Save results to CSV files
    pct_returns.to_csv(os.path.join(output_dir, 'commodity_futures_percentage_returns.csv'))
    log_returns.to_csv(os.path.join(output_dir, 'commodity_futures_log_returns.csv'))
    differences.to_csv(os.path.join(output_dir, 'commodity_futures_differencing.csv'))

if __name__ == '__main__':
    main()
